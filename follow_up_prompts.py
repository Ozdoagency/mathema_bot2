from datetime import datetime, timedelta

FOLLOW_UP_PROMPTS = {
    "15min": """{first_name}, У нас є чудова можливість покращити знання вашої дитини з математики. Давайте підберемо зручний час для пробного уроку, підкажіть, коли вам буде зручно? У нас є слоти вранці, обід та увечері 🎯\n\nP.S. До речі, зараз у нас є кілька вільних місць у групах, де діти вже показують гарні результати. Було б чудово, якби ваша дитина теж долучилася! 📚""",
    "2hours": """{first_name}, Я розумію, що вибір репетитора - це важливе рішення. Можливо, у вас є питання щодо нашої методики чи викладачів? \n\nМи пишаємося тим, що 93% наших учнів покращують свої оцінки вже за перший місяць занять. Давайте обговоримо, як ми можемо допомогти вашій дитині? 🌟""",
    "24hours": """{first_name}, Вітаю! Хочу поділитися історією успіху одного з наших учнів, який, як і ваша дитина, мав складнощі з математикою. За 2 місяці занять він підвищив свій рівень на 3 бали!\n\nПропоную 15-хвилинну консультацію, щоб розповісти, як ми можемо досягти таких же результатів з вашою дитиною. Який час вам зручний? ⭐️""",
    "48hours": """{first_name}, Доброго дня! Ми підготували спеціальну пропозицію для нових учнів: перший тиждень занять безкоштовно + персональний план навчання. \n\nЦе чудова можливість побачити нашу методику в дії без жодних зобов'язань. Пропозиція дійсна лише цього тижня. Зацікавилися? 🎓""",
    "72hours": """{first_name}, Вітаю! Як ваші справи? Я знаю, як важливо зробити правильний вибір для своєї дитини. Ми в "Математик Онлайн" гарантуємо результат вже за перший місяць занять, або повернемо кошти.\n\nМожу запропонувати вам персональну знижку 10% на перший місяць навчання. Хочете дізнатися деталі? 🌟\n\nP.S. Пропозиція актуальна лише сьогодні."""
}

REMINDER_INTERVALS = {
    "15min": 15 * 60,        # 15 хвилин у секундах
    "2hours": 2 * 60 * 60,   # 2 години
    "24hours": 24 * 60 * 60, # 24 години
    "48hours": 48 * 60 * 60, # 48 годин
    "72hours": 72 * 60 * 60  # 72 години
}

def get_next_valid_time(current_time: datetime) -> datetime:
    """
    Визначає наступний допустимий час для нагадування.
    Якщо час між 21:00 і 09:00, переносить на 9:00 наступного дня.
    """
    if current_time.hour >= 21 or current_time.hour < 9:
        next_day = current_time + timedelta(days=1)
        return next_day.replace(hour=9, minute=0, second=0, microsecond=0)
    return current_time

def generate_follow_up(last_interaction_time: datetime, current_time: datetime, first_name: str) -> tuple[str, datetime]:
    """
    Генерує фоллоу-ап повідомлення на основі часу останньої взаємодії.
    """
    elapsed_time = (current_time - last_interaction_time).total_seconds()

    for interval, message in REMINDER_INTERVALS.items():
        if elapsed_time >= REMINDER_INTERVALS[interval]:
            next_time = get_next_valid_time(current_time)
            return FOLLOW_UP_PROMPTS[interval].format(first_name=first_name), next_time

    return None, None
